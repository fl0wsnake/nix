# /examples/hyprland.conf
# https://wiki.hyprland.org/Configuring/

# get window class:
# sleep 1; hyprctl activewindow -j | jq '.class'

# You can split this configuration into multiple files
# Create your files separately and then link them to this file like this:
# source = ~/.config/hypr/myColors.conf

ecosystem:no_update_news = true
env = DISPLAY, :0

monitor=,preferred,auto,auto


# Set programs that you use
$hypr = ~/.config/hypr
$scripts = $hypr/scripts
# $terminal = $TERMINAL
# $fileManager = $EXPLORER

#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

#############################
### ENVIRONMENT VARIABLES ###
#############################

# See https://wiki.hyprland.org/Configuring/Environment-variables/

env = XCURSOR_SIZE,48
env = HYPRCURSOR_SIZE,48


###################
### PERMISSIONS ###
###################

# See https://wiki.hyprland.org/Configuring/Permissions/
# Please note permission changes here require a Hyprland restart and are not applied on-the-fly
# for security reasons

# ecosystem {
#   enforce_permissions = 1
# }

# permission = /usr/(bin|local/bin)/grim, screencopy, allow
# permission = /usr/(lib|libexec|lib64)/xdg-desktop-portal-hyprland, screencopy, allow
# permission = /usr/(bin|local/bin)/hyprpm, plugin, allow


#####################
### LOOK AND FEEL ###
#####################

general {
    gaps_in = 0
    gaps_out = 0
    border_size = 2

    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = master
}

master {
  mfact = 0.6
}

animations {
    enabled = no
}

# "Smart gaps" / "No gaps when only"
# uncomment all if you wish to use that.
# workspace = w[tv1], gapsout:0, gapsin:0
# workspace = f[1], gapsout:0, gapsin:0
# windowrule = bordersize 0, floating:0, onworkspace:w[tv1]
# windowrule = rounding 0, floating:0, onworkspace:w[tv1]
# windowrule = bordersize 0, floating:0, onworkspace:f[1]
# windowrule = rounding 0, floating:0, onworkspace:f[1]

dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
}

input {
  kb_layout = us,ua
  kb_options = grp:win_space_toggle,caps:ctrl_modifier
  repeat_rate = 20
  repeat_delay = 225
  follow_mouse = 0
  sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
  touchpad {
    natural_scroll = true
  }
}

cursor {
  no_warps = true
}

$mod = SUPER
bind = $mod, Return, exec, $TERMINAL -e sh -c "cd \"`$SCRIPTS/hypr-wcwd`\"; exec $SHELL"
bind = $mod, Q, killactive,
windowrule = bordersize 0, fullscreen: 1
bind = $mod, W, fullscreen, 1
bind = $mod, E, exec, $fileManager
bind = $mod, V, togglefloating,
bind = $mod SHIFT, Return, exec, wofi --show drun
bind = $mod, P, pseudo, # dwindle

### WINDOWS
bind = $mod, H, movefocus, l
bind = $mod, L, movefocus, r
bind = $mod, K, exec, $SCRIPTS/hypr-cycleprev
bind = $mod, J, exec, $SCRIPTS/hypr-cyclenext

bind = $mod SHIFT, H, movewindoworgroup, l
bind = $mod SHIFT, L, movewindoworgroup, r
bind = $mod SHIFT, K, movewindoworgroup, u
bind = $mod SHIFT, J, movewindoworgroup, d

bind = $mod, N, togglegroup
bind = $mod, M, togglesplit
# bind = $mod, N, hy3:changegroup, toggletab
# bind = $mod, M, hy3:makegroup, v

### WORKSPACES
bind = $mod, TAB, workspace, previous
bind = $mod, 1, workspace, 1
bind = $mod SHIFT, 1, movetoworkspacesilent, 1
bind = $mod, 2, workspace, 2
bind = $mod SHIFT, 2, movetoworkspacesilent, 2
bind = $mod, 3, workspace, 3
bind = $mod SHIFT, 3, movetoworkspacesilent, 3
bind = $mod, 4, workspace, 4
bind = $mod SHIFT, 4, movetoworkspacesilent, 4
bind = $mod, 5, workspace, 5
bind = $mod SHIFT, 5, movetoworkspacesilent, 5
bind = $mod, 6, workspace, 6
bind = $mod SHIFT, 6, movetoworkspacesilent, 6
bind = $mod, 7, workspace, 7
bind = $mod SHIFT, 7, movetoworkspacesilent, 7
bind = $mod, 8, workspace, 8
bind = $mod SHIFT, 8, movetoworkspacesilent, 8
bind = $mod, 9, workspace, 9
bind = $mod SHIFT, 9, movetoworkspacesilent, 9
bind = $mod, 0, workspace, 10
bind = $mod SHIFT, 0, movetoworkspacesilent, 10
# bind = $mod, A, workspace, name:A

bind = $mod, A, exec, $SCRIPTS/hypr-ws-or-init name:A "$TERMINAL -e sh -c '$EDITOR +:Wiki'"
bind = $mod SHIFT, A, movetoworkspacesilent, name:A

windowrule = workspace name:S, class:^zen$
bind = $mod, S, exec, $SCRIPTS/hypr-ws-or-init name:S '$BROWSER'
bind = $mod SHIFT, S, movetoworkspacesilent, name:S

windowrule = workspace name:D, class:^com.viber.Viber
windowrule = workspace name:D, class:^org.telegram.desktop
bind = $mod, D, exec, $SCRIPTS/hypr-ws-or-init name:D flatpak run com.viber.Viber; telegram-desktop
bind = $mod SHIFT, D, movetoworkspacesilent, name:D

windowrule = workspace name:F, class:^transmission-gtk$
bind = $mod, F, workspace, name:F
bind = $mod SHIFT, F, movetoworkspacesilent, name:F

bind = $mod, G, workspace, name:G
bind = $mod SHIFT, G, movetoworkspacesilent, name:G

# Example special workspace (scratchpad)
# bind = $mod, S, togglespecialworkspace, magic
# bind = $mod SHIFT, S, movetoworkspacesilent, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mod, mouse_down, workspace, e+1
bind = $mod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mod, mouse:272, movewindow
bindm = $mod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 10%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
bindel = ,XF86AudioMute, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-
# bindsym XF86Tools exec 'killall $BROWSER; systemctl poweroff'
bindl = ,XF86Keyboard, exec, killall eject-fuzzy; $TERMINAL --class=floating -e eject-fuzzy
bindl = ,XF86Favorites, exec, sudo systemctl suspend


# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

##############################
### WINDOWS AND WORKSPACES ###
##############################

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule
# windowrule = float,class:^(kitty)$,title:^(kitty)$

# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*

# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

windowrulev2 = float,class:^floating$

# Screenshots
bind = , Print, exec, grim && notify-send "Screenshot saved"
# bind = Control, Print, exec, "tmpfile=$(mktemp -u /tmp/XXX.png) && grim - > $tmpfile && vimiv $tmpfile; rm $tmpfile"
# bind = , Print, exec, "tmpfile=$(mktemp -u /tmp/XXX.png) && grim - > $tmpfile && vimiv $tmpfile; rm $tmpfile"
# bindsym Print+Shift exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy -n
# # Fullscreen -> disk storage
# # Selection -> text -> clipboard
# bindsym Print+Alt exec tmpfile=$(mktemp -u /tmp/XXX.png) && slurp | grim -g- - > $tmpfile && gocr $tmpfile | wl-copy && rm $tmpfile


exec-once = hyprpaper
exec-once = $SCRIPTS/watch-brightness
exec-once = eww open bar
