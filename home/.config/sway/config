include /etc/sway/config.d/*

# Default config: /etc/static/sway/config

set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term alacritty

set $focused_window swaymsg -t get_tree | jq -e '.nodes|map(select(.active))[0].nodes|map(.nodes)|flatten|.[]|recurse(.nodes[])|select(.focused)'
set $focused_window_pid $focused_window | jq '.pid' 2>/dev/null
set $focused_output $(swaymsg -t get_outputs | jq -r '.|map(select(.active)|select(.focused))[0]')
set $current_ws_name "$(swaymsg -t get_workspaces | jq -r '.[] | select(.focused==true).name')"

font Monospace 12
workspace_layout tabbed
titlebar_border_thickness 0
titlebar_padding 0
title_align center
for_window [app_id="floating"] floating enable
client.focused #000000 #fe8019 #000000
# the --i3 flag removes title for single windows
hide_edge_borders --i3 smart
smart_borders on

# TODO remove?
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway

# bar {
# # icon_theme Adwaita
#   position bottom
# # mode hide
#     status_command i3status-rs
#     font Hack 12, FontAwesome 12
#     separator_symbol |
#     strip_workspace_numbers yes
#     colors {
#       statusline #cccccc
#         background #101010
#     }
# }


# output eDP-1 scale 1.6524
output * bg #000000 solid_color
# output * bg /run/current-system/sw/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
focus_follows_mouse no
mouse_warping container
seat * hide_cursor when-typing enable
# input type:keyboard { # sets layout for many more inputs
input "1:1:AT_Translated_Set_2_keyboard" {
  repeat_delay 225
  repeat_rate 20
  xkb_layout 'us,ua'
  # xkb_options 'grp:win_space_toggle,caps:ctrl_modifier'
  xkb_options grp:caps_toggle
}
input type:touchpad {
  tap enabled
  natural_scroll enabled
}

bindsym $mod+Return exec $TERMINAL sh -c "cd '$($SWAY_SCRIPTS/wcwd)'; $SHELL"
bindsym $mod+Shift+Return exec wofi --show drun
bindsym $mod+Control+Return exec $TERMINAL sh -c "$EXPLORER '$($SWAY_SCRIPTS/wcwd)'; $SHELL"
bindsym $mod+x exec $TERMINAL sh -c "$EXPLORER '$($SWAY_SCRIPTS/wcwd)'; $SHELL"
bindsym $mod+e exec $TERMINAL sh -c "$EDITOR '$($SWAY_SCRIPTS/wcwd)'; $SHELL"

floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
bindsym $mod+Tab+Ctrl workspace next
bindsym $mod+Tab+Ctrl+Shift workspace prev
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Tab+Shift move container to workspace back_and_forth

# # Switch to workspace
# bindsym $mod+1 workspace number 1
# bindsym $mod+2 workspace number 2
# bindsym $mod+3 workspace number 3
# bindsym $mod+4 workspace number 4
# bindsym $mod+5 workspace number 5
# bindsym $mod+6 workspace number 6
# bindsym $mod+7 workspace number 7
# bindsym $mod+8 workspace number 8
# bindsym $mod+9 workspace number 9
# bindsym $mod+0 workspace number 10

set $a_workspace 10:A
bindsym --to-code $mod+a workspace $a_workspace; exec "$focused_window || $TERMINAL $EDITOR +Wiki"
bindsym --to-code $mod+a+Shift move container to workspace $a_workspace
bindsym --to-code $mod+a+Control exec $sway_scripts/move_workspace $current_ws_name $a_workspace
set $s_workspace 11:S
bindsym --to-code $mod+s workspace $s_workspace; exec "$focused_window || $BROWSER"
bindsym --to-code $mod+s+Shift move container to workspace $s_workspace
bindsym --to-code $mod+s+Control exec $sway_scripts/move_workspace $current_ws_name $s_workspace
set $d_workspace 12:D
bindsym --to-code $mod+d workspace $d_workspace; exec "$focused_window || (flatpak run com.viber.Viber && telegram-desktop)"
bindsym --to-code $mod+d+Shift move container to workspace $d_workspace
bindsym --to-code $mod+d+Control exec $sway_scripts/move_workspace $current_ws_name $d_workspace
set $f_workspace 13:F
bindsym --to-code $mod+f workspace $f_workspace; exec "$focused_window || transmission-gtk"
bindsym --to-code $mod+f+Shift move container to workspace $f_workspace
bindsym --to-code $mod+f+Control exec $sway_scripts/move_workspace $current_ws_name $f_workspace
set $g_workspace 14:G
bindsym --to-code $mod+g workspace $g_workspace
bindsym --to-code $mod+g+Shift move container to workspace $g_workspace
bindsym --to-code $mod+g+Control exec $sway_scripts/move_workspace $current_ws_name $g_workspace

set $1_workspace 31:1
bindsym $mod+1 workspace $1_workspace
bindsym $mod+1+Shift move container to workspace $1_workspace
bindsym $mod+1+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $1_workspace
set $2_workspace 32:2
bindsym $mod+2 workspace $2_workspace
bindsym $mod+2+Shift move container to workspace $2_workspace
bindsym $mod+2+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $2_workspace
set $3_workspace 33:3
bindsym $mod+3 workspace $3_workspace
bindsym $mod+3+Shift move container to workspace $3_workspace
bindsym $mod+3+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $3_workspace
set $4_workspace 34:4
bindsym $mod+4 workspace $4_workspace
bindsym $mod+4+Shift move container to workspace $4_workspace
bindsym $mod+4+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $4_workspace
set $5_workspace 35:5
bindsym $mod+5 workspace $5_workspace
bindsym $mod+5+Shift move container to workspace $5_workspace
bindsym $mod+5+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $5_workspace
set $6_workspace 36:6
bindsym $mod+6 workspace $6_workspace
bindsym $mod+6+Shift move container to workspace $6_workspace
bindsym $mod+6+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $6_workspace
set $7_workspace 37:7
bindsym $mod+7 workspace $7_workspace
bindsym $mod+7+Shift move container to workspace $7_workspace
bindsym $mod+7+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $7_workspace
set $8_workspace 38:8
bindsym $mod+8 workspace $8_workspace
bindsym $mod+8+Shift move container to workspace $8_workspace
bindsym $mod+8+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $8_workspace
set $9_workspace 39:9
bindsym $mod+9 workspace $9_workspace
bindsym $mod+9+Shift move container to workspace $9_workspace
bindsym $mod+9+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $9_workspace
set $0_workspace 40:0
bindsym $mod+0 workspace $0_workspace
bindsym $mod+0+Shift move container to workspace $0_workspace
bindsym $mod+0+Control exec $SWAY_SCRIPTS/move_workspace $current_ws_name $0_workspace

bindsym $mod+period split h
bindsym $mod+period+Shift sway-msg input type:keyboard xkb_layout 'us,ua'
bindsym $mod+comma split v
bindsym $mod+comma+Shift sway-msg input type:keyboard xkb_layout 'us,ru'

bindsym --to-code $mod+q kill
bindsym --to-code $mod+Shift+q exec kill -15 $($focused_window_pid)
bindsym --to-code $mod+Control+q exec $focused_window | wl-copy
# swaymsg -t get_tree | jq '.nodes|map(select(.active))[0].nodes|map(.nodes)|flatten|.[]|recurse(.nodes[])|select(.focused)'
# bindsym --to-code $mod+w fullscreen toggle
bindsym --to-code $mod+w layout toggle tabbed split
bindsym --to-code $mod+Shift+w fullscreen toggle
bindsym --to-code $mod+Control+w floating toggle
bindsym --to-code $mod+c exec clipman pick --tool wofi --histpath=$CLIP_HIST
bindsym --to-code $mod+b exec blueman-manager

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

default_border pixel 2

#
# Resizing containers:
#
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
  bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

# Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

# Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
# bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
# bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
# bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
# bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
# bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym --locked XF86AudioMute exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 0
bindsym --locked XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
bindsym --locked XF86AudioRaiseVolume exec wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 10%+
bindsym --locked XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

bindsym --locked XF86MonBrightnessUp exec brightnessctl -e4 -n2 set 20%+
bindsym --locked XF86MonBrightnessDown exec brightnessctl -e4 -n2 set 20%-
# bindsym --locked XF86Display exec brightnessctl -e4 -n2 set 5%+
bindsym --locked XF86WLAN exec fusermount -u "$MTPFS"; exec go-mtpfs "$MTPFS"&

bindsym --locked XF86Tools exec $SCRIPTS/setcharge -1
bindsym --locked XF86Bluetooth exec $SCRIPTS/setcharge 1
bindsym --locked XF86Keyboard exec killall eject-fuzzy; exec $TERMINAL --class=floating eject-fuzzy
bindsym --locked XF86Favorites exec sudo systemctl suspend

bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPause exec playerctl play-pause
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioPrev exec playerctl previous

bindsym Print exec grim && notify-send "Screenshot saved"

assign [app_id="zen"] $s_workspace
assign [app_id="firefox"] $s_workspace
assign [class="Vivaldi-stable"] $s_workspace
assign [class="Brave-browser"] $s_workspace
assign [class="Slack"] $d_workspace
assign [class="discord"] $d_workspace
assign [title="^Telegram.*"] $d_workspace
assign [title="^Rakuten Viber"] $d_workspace
assign [app_id="org.qbittorrent.qBittorrent"] $f_workspace
assign [title="^Transmission.*"] $f_workspace

# Fix touchpad not registering
exec swaymsg -t get_inputs | jq -e '.[] | select(.type=="touchpad")' || sudo modprobe -r psmouse && sudo modprobe psmouse
# Apps
exec eww open bar
exec $BROWSER
# exec dropbox
# exec watch-udiskie
exec sh -c 'while ! pgrep eww; do sleep 1; done; QT_QPA_PLATFORM=xcb syncthingtray --wait'

exec $SWAY_SCRIPTS/watch-config

workspace $0_workspace
exec $TERMINAL sh -c man configuration.nix

workspace $1_workspace
