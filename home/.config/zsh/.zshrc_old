export COLUMNS
function set_terminal_title() {
	echo -en "\e]2;$(sed s@^$HOME@~@<<<$PWD)" # it had \a at the end on the Internet where I found it
}
autoload -U add-zsh-hook && add-zsh-hook precmd set_terminal_title
autoload -U compinit && compinit
autoload -U edit-command-line && zle -N $_

setopt HIST_IGNORE_ALL_DUPS SHARE_HISTORY
setopt AUTOCD NO_HUP

### `^` for `ctrl`, `^[` for `alt`
bindkey -e
MODULES="$ZDOTDIR"/modules
. "$MODULES"/custom-commands
bindkey ' ' globalias
bindkey '^[c' yank-line
bindkey '^[z' zshrc-edit
bindkey '^[x' explorer
. "$MODULES"/sudo
bindkey '^[s' sudo-command-line
. "$MODULES"/expand-dots
. "$MODULES"/zsh-autoquoter
ZAQ_PREFIXES=('calc' 'c')
# . "$XDG_CONFIG_HOME"/fzf/fzf.zsh
# Standard bindings
bindkey '^n' down-history
bindkey '^p' up-history
bindkey '^[[Z' reverse-menu-complete # shift-tab
bindkey '^[e' edit-command-line
bindkey '^[h' zsh-history
bindkey '^[m' man-command
bindkey '^x^e' edit-command-line
bindkey '^@' forward-word # ctrl-space
bindkey '^H' backward-kill-word # ctrl-backspace
# bindkey -s '^L' '^Mclear^Mls -Alh^M'
bindkey '^[[3;5~' kill-word          # ctrl-del
bindkey '^[[1;5C' forward-word       # right
bindkey '^[[1;5D' backward-word      # left

# Aliases.helpers
export SEL='$(cat /tmp/.nnn.sel)' # TODO remove this
alias -g N='> /dev/null'
# Aliases.flags
alias -g H='--help'
alias -g V='--version'
alias -g V='--version'
# Aliases.editor & explorer
alias e=$EDITOR
alias f='file=$(~/.config/scripts/fuzzy-paths) && nnn $file && . $NNN_TMPFILE'
alias F='file=$(~/.config/scripts/fuzzy-paths-ignored) && nnn $file && . $NNN_TMPFILE'
alias a='file=$(~/.config/scripts/fuzzy-paths-home) && nnn $file && . $NNN_TMPFILE'
# Aliases.bookmarks; check ~/.config/nnn/config.sh
alias -g A="$TRASH"
alias -g D='~/Downloads'
alias -g L='~/.local/share/nvim/lazy/'
alias -g M="/run/media/$USER"
alias -g O="$MY_TODOS"
alias -g S="$SYNC"
alias -g T='/tmp/my'
alias -g W='~/WS'

# Aliases.alphabetical
alias aft='aft-mtp-mount -f -o auto_unmount'
alias ansi='ansi --color-codes'
alias b='bash'
alias c="$EDITOR $CLIP"
alias chmod="sudo chmod -cR"
alias chown="sudo chown -cR $USER:$USER"
alias cp='cp -ar'
alias curl='curl -L'
alias curlp='curl -L -X POST -H "Content-Type: application/x-www-form-urlencoded" -d '' '
alias da='sudo dnf config-manager --add-repo'
alias datef='date +"%a %b %e %H:%M:%S %Z %Y"'
alias dcd='sudo dnf copr disable'
alias dce='sudo dnf copr enable'
alias dd='dd bs=4M status=progress if=*.iso of=/dev/sd'
alias df='df -h'
alias di='sudo dnf install -y'
alias dic='dnf info -C'
alias diff='diff -r'
alias din='dnf info'
alias dl='sudo dnf list --installed | grep -iE'
alias dq='dnf repoquery -l'
alias dr='sudo dnf remove -y'
alias ds='dnf search'
alias du='du -hs'
alias dua='du -Lhs * | sort -h; du -Lhs .'
alias ec='echo'
alias fd='fd -H'
alias fde='find . -type d -empty -delete -print'
alias fdisk='sudo fdisk -l'
alias fonts='cd /usr/share/fonts'
alias ft='xdg-mime query filetype'
alias fu='fusermount -uz'
alias g='git'
alias ga='git add --all'
alias gc='cd $(git rev-parse --show-toplevel) && git commit -va'
alias gch='git checkout'
alias gcl='git clone --recurse-submodules -j8 $(wl-paste)'
alias gcls='git clone --depth 1 --recurse-submodules -j8 $(wl-paste)'
alias gd='git diff --staged'
alias gop='xdg-open $(git ls-remote --get-url "origin")'
alias gp='git push'
alias gr='git reset'
alias gs='tl=$(git rev-parse --show-toplevel) && cd $tl && git status -s'
alias gtr='git log --graph --full-history --all --color --date=short --pretty=format:"%Cred%x09%h %Creset%ad%Cblue%d %Creset %s %C(bold)(%an)%Creset"'
alias gtree='git log --graph --oneline --all'
alias h='htop'
alias iostat='iostat -h'
alias k='kill'
alias ka='killall -v'
alias killall='killall -v'
alias ln='ln -s'
alias ls='ls --color=auto -A'
alias ma='udiskie-mount -a'
alias md='mkdir -p'
alias nr='npm run'
alias nrd='npm run dev'
alias ns='npm start'
alias nt='npm test'
alias nu='npm_upgrade'
alias p='glances'
alias pipup='python3 -m pip install --upgrade pip'
alias po='udisksctl power-off -b'
alias pyup="pip3 list --format=freeze | grep -v \'^-e\' | cut -d = -f 1 | xargs -n1 pip3 install -U"
alias q='exit'
alias ram="ps aux | awk '{print \$6/1024 \" MB\t\t\" \$11}' | sort -n"
alias res='cat /sys/class/drm/card1-eDP-1/modes'
alias rsync='rsync -vhaP'
alias rsync-mtp='rsync -vhaP --no-perms --no-owner --no-group'
alias sc='sudo systemctl'
alias sda=--position=anywhere '/dev/sda'
alias sdb=--position=anywhere '/dev/sdb'
alias sdc=--position=anywhere '/dev/sdc'
alias se='sudo -e'
alias si='sudo snap install'
alias tailp="tail -f /dev/null --pid="
alias td='sudo testdisk'
alias upx='upx --best --lzma'
alias usermod="sudo usermod -a $USER -G"
alias vd='nvim -d'
alias which='which -a'
alias wp='wl-paste'
alias y='yt-dlp -N 8 --downloader aria2c --yes-playlist'
alias ys='yt-dlp --download-archive ARCHIVE --force-write-archive --break-on-existing --skip-download --write-subs --write-auto-subs --sub-lang en --sub-format ttml --convert-subs srt --yes-playlist'
unalias grep 2>/dev/null

# https://github.com/jarun/nnn/blob/a2deaf57f310518855160eb8f8363c532b1b611d/misc/quitcd/quitcd.bash_sh_zsh
x() {
	[ "${NNNLVL:-0}" -eq 0 ] || exit
	command nnn "$@"
	[ ! -f "$NNN_TMPFILE" ] || {
		. "$NNN_TMPFILE"
		rm -f -- "$NNN_TMPFILE" > /dev/null
	}
}

mcd() {
	mkdir -p "$@" && cd "$@"
}

mkvify() {
  for file in "$@"; do 
    # ($TERMINAL -e bash -c "ffmpeg -fflags +genpts -i "$file" -c:v copy -c:a copy ${file%.*}.mkv") &
    ($TERMINAL -e bash -c "ffmpeg -fflags +genpts -i '$file' -c:v copy -c:a copy -c:s srt '${file%.*}.mkv'") &
  done
}

# Prints a character of a given `#rrggbb` color
color() {
	perl -e 'foreach $a(@ARGV){$a=~s/^#//;print "\e[48:2::".join(":",unpack("C*",pack("H*",$a)))."m \e[49m "};print "\n"' "$@"
}

. /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
. /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fpath=(/usr/share/zsh/site-functions $fpath)

# The next line enables shell command completion for gcloud.
if [ -f "/opt/google-cloud-sdk/completion.zsh.inc" ]; then . "/opt/google-cloud-sdk/completion.zsh.inc" ; fi

eval "$(starship init zsh)"
