#!/usr/bin/env bash

DIR="$(readlink -f "$(dirname "$0")")" || exit

# Cloud
ln -sTv ~/.config/rclone/rclone.conf $SYNC/.config/rclone.conf 2>/dev/null

# NixOS
sudo ln -sTv $DIR/nixos /etc/nixos 2>/dev/null

# Home
paths=(
  ~/.bash_profile # to prevent tmux from running ~/.profile
  ~/.bashrc
  ~/.blerc
  ~/.config/alacritty
  ~/.config/eww
  ~/.config/i3status-rust
  ~/.config/kitty
  ~/.config/lf
  ~/.config/mako
  ~/.config/mimeapps.list
  ~/.config/nnn/config
  ~/.config/nnn/plugins
  ~/.config/nvim
  ~/.config/scripts
  ~/.config/syncthing-1/config.xml
  ~/.config/syncthing-2/config.xml
  ~/.config/syncthingtray.ini
  ~/.config/transmission/settings.json
  ~/.config/vimiv
  ~/.config/waybar
  ~/.config/zsh
  ~/.fuzzy-home-ignore
  ~/.gitconfig
  ~/.ignore # for ripgrep
  ~/.lesskey
  ~/.local/bin
  ~/.local/share/lf/marks
  ~/.npmrc
  ~/.profile
  ~/.tmux.conf
  ~/.zprofile
)

printf "%s\n" "${paths[@]}" | while read -r path; do 
  path_bac="${path/~/$DIR/home}"
  if [[ ! -e "$path_bac" ]]; then
    if [[ ! -e "$path" ]]; then
      echo "$path"
      echo "No config to backup: $path"; exit 1
    else
      mkdir -p "$(dirname "$path_bac")"
      echo "Backing up $path to $(readlink -f "$path_bac")"
      mv "$path" "$path_bac"
    fi
  fi
  ln -sTv "$path_bac" "$path" 2>/dev/null
done
